name: CI Pipeline

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read

jobs:
  #deno-tests:
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: Setup repo
  #      uses: actions/checkout@v3
  #
  #    - name: Setup Deno
  #      uses: denoland/setup-deno@9db7f66e8e16b5699a514448ce994936c63f0d54
  #      with:
  #        deno-version: v1.x
  #
  #    - name: Verify formatting
  #      run: deno fmt --check
  #
  #    - name: Run linter
  #      run: deno lint
  #
  #    - name: Run tests
  #      run: deno test -A
  #
  #deno-docker-build:
  #  needs: deno-tests
  #  runs-on: ubuntu-latest
  #  steps:
  #    - name: Checkout repository
  #      uses: actions/checkout@v3
  #    - name: Build the Docker image
  #      run: cd hpcc_ui && docker build . --file Dockerfile --tag hpcc-ui:$(date +%s)

  django-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: local
          POSTGRES_PASSWORD: local
          POSTGRES_DB: postgres
    steps:
      - name: Setup repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11.1

      - name: Setup Poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: 1.4.2

      - name: Automated Tests
        run: cd hpcc_services && poetry install && poetry run pytest

  django-docker-build:
    needs: django-tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Build the Docker image
        run: cd hpcc_services && docker build . --file Dockerfile --tag hpcc-services:$(date +%s)
